[
  {
    "title": "$:/plugins/danielo515/tiddlypouch",
    "description": "tiddlypouch for TiddlyWiki",
    "author": "Danielo Rodriguez",
    "core-version": ">=5.1.14",
    "list": "readme",
    "version": "0.27.1-30",
    "released": "Mon, 20 Apr 2020 08:26:11 GMT",
    "plugin-type": "plugin",
    "dependents": "",
    "type": "application/json",
    "text": "{\n    \"tiddlers\": {\n        \"$:/plugins/danielo515/tiddlypouch/utils/logger.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/utils/logger.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/utils/logger.js\\ntype: application/javascript\\nmodule-type: library\\nA basic logging implementation\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function _typeof(e){\\\"@babel/helpers - typeof\\\";if(typeof Symbol===\\\"function\\\"&&typeof Symbol.iterator===\\\"symbol\\\"){_typeof=function e(t){return typeof t}}else{_typeof=function e(t){return t&&typeof Symbol===\\\"function\\\"&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t}}return _typeof(e)}var Super=require(\\\"$:/core/modules/utils/logger.js\\\").Logger;function Logger(e,t,o){Super.call(this,e);if(_typeof(t)===\\\"object\\\"){o=t.verbose;t=t.debug}this.isDebug=t||this.isDebugActive;this.isVerbose=o}Logger.prototype=Object.create(Super.prototype);Logger.prototype.constructor=Super;Logger.prototype.debug=function(){if(!this.isDebug){return}this.log.apply(this,Array.prototype.slice.call(arguments,0))};Logger.prototype.trace=function(){if(!this.isVerbose){return}this.debug.apply(this,Array.prototype.slice.call(arguments,0))};exports.Logger=Logger;\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/Logger.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/config/SyncFilter\": {\n            \"title\": \"$:/config/SyncFilter\",\n            \"comment\": \"Temprorary workaround until I implement this function in the syncer\",\n            \"text\": \"[is[tiddler]] -[[$:/HistoryList]] -[[$:/Import]] -[[$:/isEncrypted]] -[prefix[$:/status/]] -[prefix[$:/state/]] -[prefix[$:/temp/]] -[prefix[$:/plugins/danielo515/tiddlypouch/]] [[$:/status/UserName]]\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/boot.js\": {\n            \"text\": \"<script>\\n\\\"use strict\\\";(function(n){\\\"use strict\\\";var o=n.$TPouch||Object.create(null);if(o.supressBoot){return}o._configDb=o._configDb||new PouchDB(\\\"__TP_config\\\");o.splashScreen=o.splashScreen||Object.create(null);o.VERSION=\\\"0.27.1-30\\\";var e=n.$tw||Object.create(null);e.boot=e.boot||Object.create(null);e.boot.suppressBoot=true;n.$TPouch=o;n.$tw=e;function s(e){var t=document.createElement(\\\"h1\\\");t.setAttribute(\\\"data-text\\\",e);var n=document.createTextNode(e);t.appendChild(n);return t}function t(e){function t(e){if(!document.body){return setTimeout(t.bind(null,e),1)}document.body.appendChild(e,document.body.firstChild)}var n=document.getElementById(\\\"TP_splash_screen\\\");if(n===null){n=document.createElement(\\\"div\\\");n.setAttribute(\\\"id\\\",\\\"TP_splash_screen\\\");n.appendChild(s(e));t(n)}else{splashMessage(e)}o.splashScreen.node=n}o.splashScreen.hide=function e(){o.splashScreen.node.style.opacity=0;setTimeout(function(){o.splashScreen.node.style.display=\\\"none\\\"},2e3)};o.splashScreen.showMessage=function e(t){var n=o.splashScreen.node;n.replaceChild(s(t),n.firstChild);n.style.display=\\\"block\\\";n.style.opacity=1};function i(e,n){var t=[\\\"_design/by_type\\\",\\\"_design/skinny_tiddlers\\\",\\\"_design/by_plugin_type\\\",\\\"_design/filtered_replication\\\",\\\"_design/TiddlyPouch\\\",\\\"_design/startup_tiddlers\\\"];if(e&&!(parseInt(e.split(\\\".\\\").join(\\\"\\\"))<parseInt(o.VERSION.split(\\\".\\\").join(\\\"\\\")))){return Promise.resolve()}console.log(\\\"Starting update process...\\\");o.splashScreen.showMessage(\\\"Updating database\\\");return Promise.all(t.map(function(t){return n.get(t).then(function(e){console.log(\\\"Removing index \\\",t);return n.remove(e)})[\\\"catch\\\"](console.log.bind(console,\\\"Error removing \\\",t,\\\" which may be totally fine if it did not exist.\\\"))})).then(function(){console.log(\\\"Update process complete\\\")})}t(\\\"Loading\\\");o._configDb.get(\\\"configuration\\\").then(function(e){if(!e.selectedDbId){throw new Error(\\\"There is no DB selected, nothing to inject\\\")}o._db=new PouchDB(e.selectedDbId);var t=e.databases[e.selectedDbId].version;return i(t,o._db).then(function(){e.databases[e.selectedDbId].version=o.VERSION;return o._configDb.put(e)})}).then(function(){return o._db.query(\\\"startup_tiddlers\\\",{include_docs:true})}).then(function(e){console.log(\\\"Injecting \\\",e.total_rows,\\\" startup tiddlers into tw\\\");var t=e.rows.map(function(e){return e.doc.fields});n.$tw.preloadTiddlers=t})[\\\"catch\\\"](function(e){console.log(\\\"Something went wrong during plugin injection \\\",e)}).then(function(){if(e.boot.boot){e.boot.boot()}else{console.log(\\\"Allowing TW boot itself....\\\");e.boot.suppressBoot=false}})})(window);\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/boot/tpouch-boot.js.map\\n\\n</script>\",\n            \"type\": \"application/javascript\",\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/boot.js\",\n            \"tags\": [\n                \"$:/tags/RawMarkup\"\n            ]\n        },\n        \"$:/plugins/danielo515/tiddlypouch/boot.css\": {\n            \"text\": \"<style>\\n#TP_splash_screen{position:fixed;top:0;left:0;width:100%;height:100%;background-color:#FFF;margin:0;font-size:14px;-webkit-transition:opacity 2s ease-in-out;-moz-transition:opacity 2s ease-in-out;-ms-transition:opacity 2s ease-in-out;-o-transition:opacity 2s ease-in-out;transition:opacity 2s ease-in-out}#TP_splash_screen>h1{text-align:center;color:#CECECE;font-size:5.5em;width:100%;position:relative;word-wrap:break-word;font-weight:300;margin:0.67em 0;line-height:1.2;font-family:\\\"Helvetica Neue\\\", Helvetica, Arial, \\\"Lucida Grande\\\", \\\"DejaVu Sans\\\", sans-serif;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-webkit-box-sizing:border-box;box-sizing:border-box}@media (min-width: 1200px){#TP_splash_screen>h1{font-size:12em}}#TP_splash_screen>h1:before{content:attr(data-text);overflow:hidden;position:absolute;max-width:5.5em;white-space:nowrap;color:#93cf93;animation:loading 6s linear}@keyframes loading{0%{max-width:0}}\\n\\n</style>\",\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/boot.css\",\n            \"tags\": [\n                \"$:/tags/RawMarkup\"\n            ]\n        },\n        \"$:/plugins/danielo515/tiddlypouch/constants.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/constants.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/constants.js\\ntype: application/javascript\\nmodule-type: library\\n\\nConstants used across the entire plugin.\\nThis may feel trivial, but it is an big advantage:\\n - one single place to see all the relevant tiddlers\\n - one single place to update to change a tiddler name\\n - other plugins/authors just use this constants and don't worry about keeping the names up-to-date\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";module.exports={DELETE_DB:\\\"tm-pouch-delete-db\\\",LIST_REVISIONS:\\\"tm-tp-load-revisions\\\",LOAD_REVISION:\\\"tm-tp-load-certain-revision\\\",CONFIG_SAVED:\\\"tm-tp-config-saved\\\",UPDATE_DEBUG:\\\"tm-TP-config-updateDebug\\\",UPDATE_SELECTED_DB:\\\"tm-TP-config-updateSelectedDB\\\",DB_HAS_BEEN_SELECTED:\\\"tm-TP-config-selectedDb\\\",SYNC_ICON:\\\"$:/plugins/danielo515/tiddlypouch/ui/sync-flag\\\",DATABASE_NAMES:\\\"$:/plugins/danielo515/tiddlypouch/config/database_names\\\"};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/constants.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/dbstore/factory\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/dbstore/factory\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/dbstore/factory\\ntype: application/javascript\\nmodule-type: library\\n\\nA factory of DbStores. This factory is responsible of instantiating the DbStores and inject them the required dependecies\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";module.exports=factory;var DbStore=require(\\\"$:/plugins/danielo515/tiddlypouch/DbStore.js\\\");var converters={tiddlers:require(\\\"$:/plugins/danielo515/tiddlypouch/converters/tiddler\\\"),plugins:require(\\\"$:/plugins/danielo515/tiddlypouch/converters/plugins\\\")};function factory(r,e,t){e=e||\\\"tiddlers\\\";var i=converters[e];var o=new DbStore(r,t);return i.decorate(o)}\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/databases/DbStore.factory.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/DbStore.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/DbStore.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/DbStore.js\\ntype: application/javascript\\nmodule-type: library\\n\\nManages insertions, extractions, deletions of tiddlers to a database.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function ownKeys(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);if(e)n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable});r.push.apply(r,n)}return r}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};if(e%2){ownKeys(Object(r),true).forEach(function(e){_defineProperty(t,e,r[e])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}}return t}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\\\"Cannot call a class as a function\\\")}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||false;n.configurable=true;if(\\\"value\\\"in n)n.writable=true;Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){if(t)_defineProperties(e.prototype,t);if(r)_defineProperties(e,r);return e}var identity=function e(t){return t};var ignoreRevisionFor=[\\\"$:/StoryList\\\"];module.exports=function(){function r(e,t){_classCallCheck(this,r);this.name=e;this._db=t instanceof PouchDB?t:new PouchDB(e);this.logger=new $TPouch.Logger(\\\"DbStore:\\\"+e)}_createClass(r,[{key:\\\"_Conflict\\\",value:function e(t){var r=this;return function(e){if(e.status==409){return r.logger.log(t)}throw e}}},{key:\\\"destroy\\\",value:function e(){return Promise.all([this._db.destroy(),$TPouch.config.removeDatabase(this.name)])}},{key:\\\"_makeDesignDocument\\\",value:function e(t,r){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:identity;return{_id:\\\"_design/\\\"+t,views:_defineProperty({},t,{map:n(r.toString())})}}},{key:\\\"createIndex\\\",value:function e(t,r,n){var i=this;this.logger.debug(\\\"Creating index\\\"+t+\\\"...\\\");return this._db.put(this._makeDesignDocument(t,r,n)).then(function(){return i.logger.debug(\\\"Index \\\"+t+\\\" created\\\")})[\\\"catch\\\"](this._Conflict(\\\"Index \\\"+t+\\\" exists already\\\"))}},{key:\\\"replaceIndex\\\",value:function e(t,r,n){var i=this;var o=this._makeDesignDocument(t,r,n);return this._db.get(o._id)[\\\"catch\\\"](function(e){if(e.status!==404){throw e}return{}}).then(function(e){var t=e._rev;t&&(o._rev=t);return i._db.put(o)})}},{key:\\\"_upsert\\\",value:function e(t){var r=this;return r._db.get(t._id)[\\\"catch\\\"](function(e){if(e.name===\\\"not_found\\\"){delete t._rev;return{}}throw e}).then(function(e){return r._db.put(_objectSpread({},e,{},t))}).then(function(e){r.logger.debug(\\\"Upserted document: \\\",e);return e})}},{key:\\\"_validateRevision\\\",value:function e(t){if(/\\\\d+-[A-z0-9]*/.test(t)){return t}return undefined}},{key:\\\"addTiddler\\\",value:function e(t,r){var n=this;var i=ignoreRevisionFor.includes(t.fields.title);var o=this._convertToCouch(t,i?{}:r.tiddlerInfo);this.logger.debug(\\\"Saving \\\",o);return n._upsert(o)}},{key:\\\"deleteTiddler\\\",value:function e(t){var r=this;var n=r._mangleTitle(t);return r._db.get(n).then(function(e){e._deleted=true;return r._db.put(e)})[\\\"catch\\\"](r.logger.log.bind(r.logger,\\\"Something went wrong deleting \\\"+t))}},{key:\\\"getTiddler\\\",value:function e(t,r){var n=this;var i=[n._mangleTitle(t)];if(n._validateRevision(r)){i.push({rev:r})}n.logger.debug(\\\"Retrieving tiddler \\\",t,\\\" from database\\\");return n._db.get.apply(n._db,i).then(n._convertFromCouch.bind(n))[\\\"catch\\\"](function(e){n.logger.log(\\\"Error getting tiddler \\\"+t+\\\" from DB\\\",e);throw e})}},{key:\\\"getTiddlers\\\",value:function e(t,r,n){var i=this;var o={include_docs:undefined===n?true:n};if(r){o.key=r}return i._db.query(t,o).then(function(e){i.logger.trace(\\\"Query to \\\",t,\\\" searching for \\\",r,\\\" : \\\",e.rows);return e.rows}).then(function(e){return e.map(function(e){return e.doc?e.doc:{_id:e.id,fields:e.value}})}).then(function(e){return e.map(i._convertFromCouch.bind(i))})[\\\"catch\\\"](i.logger.log.bind(i.logger))}},{key:\\\"getTiddlerRevisions\\\",value:function e(t){return this._db.get(this._mangleTitle(t),{revs_info:true}).then(function(e){var t=e._revs_info.filter(r).map(n);return t});function r(e){return e.status===\\\"available\\\"}function n(e){return e.rev}}}]);return r}();\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/databases/DbStore.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/converters/converter.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/converters/converter.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/converters/converter.js\\ntype: application/javascript\\nmodule-type: library\\n\\nBasic converter. Used by other decorators (AKA converters)\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";module.exports.decorate=Converter;function Converter(e){e._mangleTitle=function e(r){if(r.length==0){return r}var t=r.charAt(0);var n=r.substring(1);if(t===\\\"_\\\"){return\\\"%5f\\\"+n}else if(t===\\\"%\\\"){return\\\"%25\\\"+n}else{return r}};return e}\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/databases/converter.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/converters/plugins\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/converters/plugins\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/converters/plugins\\ntype: application/javascript\\nmodule-type: library\\n\\nDecorator that convert tiddlywiki plugins into PouchDB documents\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";module.exports.decorate=pluginConverter;var BaseConverter=require(\\\"$:/plugins/danielo515/tiddlypouch/converters/converter.js\\\");function pluginConverter(e){e=BaseConverter.decorate(e);e._convertToCouch=function e(r){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},i=t.adaptorInfo;var n={fields:{}};if(r){$tw.utils.each(r.fields,function(e,t){if(t===\\\"revision\\\"){return}n.fields[t]=r.getFieldString(t)});n.fields.tags=r.fields.tags}n.fields.type=n.fields.type||\\\"text/vnd.tiddlywiki\\\";n._id=this._mangleTitle(r.fields.title);if(i&&i._rev&&this._validateRevision(i._rev)){n._rev=i._rev}return n};e._convertFromCouch=function e(){var t=new Error(\\\"Tiddlers should not be loaded from the plugins database!\\\");t.status=403;throw t};e.deleteTiddler=function(){var e=new Error(\\\"Tiddlers should not be deleted through the plugins database!\\\");e.status=403;throw e};return e}\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/databases/plugins.converter.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/converters/tiddler\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/converters/tiddler\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/converters/tiddler\\ntype: application/javascript\\nmodule-type: library\\n\\na conversor that makes tiddlers compatible with pouchdb. This injects the required methods into the db store to handle conversions between regular tiddlers and couchdb\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";module.exports.decorate=tiddlerConverter;var BaseConverter=require(\\\"$:/plugins/danielo515/tiddlypouch/converters/converter.js\\\");function tiddlerConverter(e){e=BaseConverter.decorate(e);e._convertToCouch=function e(i){var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},r=t.adaptorInfo;var n={fields:{}};if(i){$tw.utils.each(i.fields,function(e,t){if(t===\\\"revision\\\"){return}if(t===\\\"_attachments\\\"&&!i.isDraft()){n._attachments=e;return}n.fields[t]=i.getFieldString(t)});n.fields.tags=i.fields.tags}n.fields.type=n.fields.type||\\\"text/vnd.tiddlywiki\\\";n._id=this._mangleTitle(i.fields.title);if(r&&r._rev&&this._validateRevision(r._rev)){n._rev=r._rev}return n};e._convertFromCouch=function e(i){var r={};this.logger&&this.logger.debug(\\\"Converting from \\\",i);$tw.utils.each(i,function(e,t){if(t===\\\"fields\\\"){$tw.utils.each(e,function(e,t){r[t]=e})}else if(t===\\\"_id\\\"||t===\\\"_rev\\\"){}else{r[t]=i[t]}});i._rev&&(r.revision=i._rev);return r};e.getSkinnyTiddlers=function(){return this.getTiddlers(\\\"skinny_tiddlers\\\",null,false)};return e}\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/databases/tiddler.converter.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/images/revisions\": {\n            \"text\": \"<svg class=\\\"tc-image-file tc-image-button\\\" width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"-12 0 128 128\\\">\\n <g>\\n  <path stroke-opacity=\\\"0\\\" id=\\\"svg_18\\\" d=\\\"m8,125.96423l84,1l2,-95l-25,-25l-60,2l-1,117z\\\" stroke-linecap=\\\"square\\\" stroke-linejoin=\\\"round\\\" stroke-dasharray=\\\"null\\\" stroke-width=\\\"4\\\" stroke=\\\"#000000\\\"/>\\n  <g id=\\\"svg_1\\\" fill-rule=\\\"nonzero\\\">\\n   <path d=\\\"m98.96811,33.5l0.03189,0l0,89.49908c0,4.41879 -3.58089,8.00092 -7.99925,8.00092l-80.0015,0c-4.41787,0 -7.99925,-3.58231 -7.99925,-8.00092l0,-111.99816c0,-4.41879 3.58089,-8.00092 7.99925,-8.00092l57.00075,0l0,0.02018c2.15899,-0.09171 4.34822,0.6869 5.99825,2.33693l22.62693,22.62693c1.5265,1.5265 2.30776,3.5158 2.34293,5.51596l0,0zm-30.96811,-22.5l-57,0l0,112l80,0l0,-89.5l-14.99965,0c-4.41847,0 -8.00035,-3.57837 -8.00035,-8.00035l0,-14.49965z\\\" id=\\\"svg_2\\\" />\\n   <text stroke-opacity=\\\"0\\\" fill=\\\"#ffffff\\\" x=\\\"43.25633\\\" y=\\\"54.82153\\\" id=\\\"svg_9\\\" font-size=\\\"24\\\" font-family=\\\"Sans-serif\\\" text-anchor=\\\"middle\\\" xml:space=\\\"preserve\\\" transform=\\\"matrix(3.5430981263433354,0,0,3.1603711640014467,-102.24349149601478,-63.365374592008266) \\\" stroke=\\\"#000000\\\" stroke-linejoin=\\\"round\\\" stroke-linecap=\\\"round\\\" font-weight=\\\"bold\\\">R</text>\\n   <rect stroke=\\\"#000000\\\" stroke-opacity=\\\"0\\\" fill=\\\"#ffffff\\\" x=\\\"19\\\" y=\\\"39\\\" width=\\\"64\\\" height=\\\"8\\\" rx=\\\"4\\\" id=\\\"svg_3\\\"/>\\n   <rect stroke-opacity=\\\"0\\\" stroke=\\\"#000000\\\" fill=\\\"#ffffff\\\" x=\\\"19\\\" y=\\\"23\\\" width=\\\"40\\\" height=\\\"8\\\" rx=\\\"4\\\" id=\\\"svg_8\\\"/>\\n  </g>\\n </g>\\n</svg>\",\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/images/revisions\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/images/cloud-error\": {\n            \"text\": \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" x=\\\"0\\\" y=\\\"0\\\"\\n    width=\\\"23\\\" height=\\\"23\\\" viewBox=\\\"0 0 512 512\\\" enable-background=\\\"new 0 0 512 512\\\"\\n    xml:space=\\\"preserve\\\">\\n<path d=\\\"M446.3 208.8C447 203.3 448 197.8 448 192c0-70.7-57.3-128-128-128 -41.8 0-78.6 20.3-101.9 51.4C209.7 113.3 201 112 192 112c-61.9 0-112 50.1-112 112 0 1.8 0.4 3.3 0.5 5.1C34.1 242.7 0 285.2 0 336c0 61.9 50.1 112 112 112h272c70.7 0 128-57.3 128-128C512 272.1 485.3 230.8 446.3 208.8zM346.5 333.3l-45.2 45.3L256 333.3l-45.2 45.3 -45.3-45.2L210.8 288l-45.3-45.2 45.3-45.2L256 242.8l45.3-45.2 45.3 45.3L301.3 288 346.5 333.3z\\\"/>\\n</svg>\",\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/images/cloud-error\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/images/cloud-ok\": {\n            \"text\": \"<svg version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n\\t width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"0 0 512 512\\\" enable-background=\\\"new 0 0 512 512\\\" xml:space=\\\"preserve\\\">\\n<path d=\\\"M319.99,64.012c-41.799,0-78.862,20.378-102.26,51.478-8.3011-2.0992-16.739-3.4783-25.739-3.4783-61.901,0-112,50.1-112,112,0,1.8009-0.08904,3.7652,0,5.5652-46.401,13.6-80,55.635-80,106.43,0,61.9,50.099,112,112,112h272c70.701,0,128-57.3,128-128,0-47.9-27.086-88.609-66.087-110.61,0.71235-5.5,2.0858-11.591,2.0858-17.391,0-70.7-57.299-128-128-128zm79.304,81.391c5.2538-0.001,9.9054,2.1682,13.913,6.2609,7.9992,8.1706,8.0168,21.029,0,29.217l-198.94,203.83c-4.0067,4.0927-9.3542,6.2604-14.609,6.2609-5.2609,0.002-10.594-2.1615-14.609-6.2609l-86.953-88.36c-8.0375-8.2098-8.0155-21.726,0-29.913,7.9992-8.1706,20.498-8.196,28.522,0l73.043,73.739,185.04-188.52c4.0063-4.0922,9.3549-6.2598,14.609-6.2609z\\\"/>\\n</svg>\\n\\n\",\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/images/cloud-ok\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/images/cloud-spinning\": {\n            \"text\": \"<svg version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\"\\n\\t width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"0 0 512 512\\\" enable-background=\\\"new 0 0 512 512\\\" xml:space=\\\"preserve\\\">\\n<path d=\\\"M446.313,208.813C447.031,203.25,448,197.75,448,192c0-70.688-57.281-128-128-128c-41.813,0-78.594,20.344-101.938,51.375\\n\\tC209.656,113.344,201,112,192,112c-61.875,0-112,50.125-112,112c0,1.75,0.438,3.313,0.5,5.063C34.094,242.719,0,285.156,0,336\\n\\tc0,61.875,50.125,112,112,112h272c70.719,0,128-57.281,128-128C512,272.063,485.344,230.75,446.313,208.813z M128,288h32\\n\\tc0-52.938,43.063-96,96-96c19,0,37.094,5.625,52.344,15.531l-19.438,25.906c-9.766-5.875-21-9.438-32.906-9.438\\n\\tc-35.297,0-64,28.688-64,64h32l-48,64L128,288z M352,288c0,52.938-43.063,96-96,96c-19,0-37.078-5.625-52.359-15.531l19.438-25.906\\n\\tC232.859,348.438,244.094,352,256,352c35.281,0,64-28.688,64-64h-32l48-64l48,64H352z\\\"/>\\n</svg>\\n\",\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/images/cloud-spinning\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/pouchadaptor.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/pouchadaptor.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/pouchadaptor.js\\ntype: application/javascript\\nmodule-type: syncadaptor\\n\\nA sync adaptor module for synchronising with local PouchDB\\n\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function PouchAdaptor(t){this.wiki=t.wiki;var e=$TPouch.config.debug;this.logger=new $TPouch.Logger(\\\"PouchAdaptor\\\",e.isActive(),e.isVerbose());this.sessionUrl=function(){return $TPouch.config.currentDB.getUrl(\\\"_session\\\")}}function httpRequest(n){var r=n.type||\\\"GET\\\",o=n.headers||{accept:\\\"application/json\\\"},i=new XMLHttpRequest,u=\\\"\\\",a;if(n.data){if(typeof n.data===\\\"string\\\"){u=n.data}else{a=[];$tw.utils.each(n.data,function(t,e){a.push(e+\\\"=\\\"+encodeURIComponent(t))});u=a.join(\\\"&\\\")}}if(n.withCredentials){i.withCredentials=true}return new Promise(function(t,e){i.onreadystatechange=function(){if(this.readyState===4){if(this.status===200||this.status===201||this.status===204){return t(this.responseText)}return e(\\\"XMLHttpRequest error code: \\\"+this.status)}};i.open(r,n.url,true);if(o){$tw.utils.each(o,function(t,e){i.setRequestHeader(e,t)})}if(u&&!$tw.utils.hop(o,\\\"Content-type\\\")){i.setRequestHeader(\\\"Content-type\\\",\\\"application/x-www-form-urlencoded; charset=UTF-8\\\")}i.send(u)})}PouchAdaptor.prototype.getStatus=function(o){var i=this;if(!i.sessionUrl()){return o(null,false,\\\"NON-AUTHENTICATED\\\")}return httpRequest({url:i.sessionUrl(),withCredentials:true}).then(function(t){var e=null;var n=false;var r=null;try{e=JSON.parse(t)}catch(t){}if(e&&e.userCtx){r=e.userCtx.name;n=r!==null;if(!n&&e.userCtx.roles.length==1&&e.userCtx.roles[0]===\\\"_admin\\\"){i.logger.debug(\\\"Warning! Server is on admin party mode!\\\");n=true}}if(n&&!$TPouch.onlineDB){$TPouch.onlineDB=$TPouch.newOnlineDB();$TPouch.startSync($TPouch.onlineDB)}o(null,n,r)})[\\\"catch\\\"](function(t){i.logger.debug(\\\"Error during login phase\\\",t);return o(null,false,\\\"NON-AUTHENTICATED\\\")})};PouchAdaptor.prototype.login=function(t,e,n){var r=this;var o=this.logger;o.log(\\\"About to log in...\\\");return httpRequest({type:\\\"POST\\\",url:r.sessionUrl(),withCredentials:true,data:{name:t,password:e}}).then(function(){o.log(\\\"Login succeed\\\");n()})[\\\"catch\\\"](function(t){o.log(\\\"Login failed\\\",t);o.alert(\\\"Login failed\\\");n(t)})};PouchAdaptor.prototype.logout=function(t){var e=this;var n={url:e.sessionUrl(),type:\\\"DELETE\\\",withCredentials:true};return httpRequest(n).then(function(){return t()})[\\\"catch\\\"](t)};PouchAdaptor.prototype.getTiddlerInfo=function(t){return{_rev:t?t.fields.revision:0}};PouchAdaptor.prototype.getSkinnyTiddlers=function(t){$TPouch.database.getSkinnyTiddlers().then(t.bind(null,null))[\\\"catch\\\"](t)};PouchAdaptor.prototype.saveTiddler=function(t,e){var n=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{tiddlerInfo:{}};this.logger.trace(\\\"Tiddler info \\\",n.tiddlerInfo);$TPouch.router.route(t).addTiddler(t,n).then(function(t){e(null,{_rev:t.rev},t.rev)})[\\\"catch\\\"](e)};PouchAdaptor.prototype.loadTiddler=function(t,e){$TPouch.database.getTiddler(t).then(e.bind(null,null))[\\\"catch\\\"](e)};PouchAdaptor.prototype.deleteTiddler=function(t,e,n){if(!n.tiddlerInfo||!n.tiddlerInfo.adaptorInfo||typeof n.tiddlerInfo.adaptorInfo._rev==\\\"undefined\\\"){e(null)}$TPouch.database.deleteTiddler(t).then(function(){return e()})[\\\"catch\\\"](e)};PouchAdaptor.prototype.isReady=function(){return true};if($tw.browser&&$TPouch.database){exports.adaptorClass=PouchAdaptor}\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/pouchdbadaptor.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"syncadaptor\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/readme\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/readme\",\n            \"text\": \"This is tiddlypouch plugin for [[TiddlyWiki|tiddlywiki.com]].\\nThis plugin uses PouchDB library to provide a store for your tiddlers. \\nTiddlers are saved to the built-in database of your browser. It is also possible to setup a remote\\ndatabase and make tiddlypouch sync your local database with the remote one! This allows you very\\ninteresting workflows like ''working offline'' and syn back to the server when you come back online.\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/database/router.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/database/router.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/database/router.js\\ntype: application/javascript\\nmodule-type: library\\n\\nRoutes tiddlers between databases. What it actually does is return the destination database for a given tiddler.\\nIt is the responsibility of the entity that is requesting the routing to act on that destination.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function _typeof(t){\\\"@babel/helpers - typeof\\\";if(typeof Symbol===\\\"function\\\"&&typeof Symbol.iterator===\\\"symbol\\\"){_typeof=function t(e){return typeof e}}else{_typeof=function t(e){return e&&typeof Symbol===\\\"function\\\"&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e}}return _typeof(t)}module.exports=DbRouter;function defaultRouter(t){if(this.destinations[\\\"default\\\"]){return\\\"default\\\"}throw new Error(\\\"There is no default route set!\\\")}var defaultRoute={name:\\\"default\\\",canRoute:function t(){return true},route:defaultRouter};function DbRouter(t){this.destinations={default:t};this.routes=[defaultRoute]}DbRouter.createRouter=function(t){return new DbRouter(t)};DbRouter.prototype.addRoute=function(t){if(_typeof(t)===\\\"object\\\"&&typeof t.canRoute===\\\"function\\\"&&typeof t.route===\\\"function\\\"){this.routes.push(t);return this}var e=new Error('Invalid route. Routes should include \\\"canRoute\\\" and \\\"route\\\" methods');throw e};DbRouter.prototype.addDestination=function(t,e){this.destinations[t]=e;return this};DbRouter.prototype.findRoute=function(t){for(var e=this.routes.length-1;e>-1;--e){var o=this.routes[e];if(o.canRoute.call(this,t)){return o}}};DbRouter.prototype.route=function(t){var e=this.findRoute(t);var o=e.route.call(this,t);return this.destinations[o]};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/router/DbRouter.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/database/routes\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/database/routes\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/database/routes\\ntype: application/javascript\\nmodule-type: library\\n\\nsome routes for the DbRouter class\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";module.exports.plugins={name:\\\"plugins\\\",route:function n(u){return\\\"__TP_plugins\\\"},canRoute:function n(u){return u&&u.isPlugin&&u.isPlugin()}};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/router/routes.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/savers/DownloadCurrentDB\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/savers/DownloadCurrentDB\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/savers/DownloadCurrentDB\\ntype: application/javascript\\nmodule-type: saver\\n\\nSaves all the tiddlers on the current database as JSON\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";var Utils=require(\\\"$:/plugins/danielo515/tiddlypouch/utils\\\");var saveStartNotification=\\\"$:/language/TiddlyPouch/Notifications/Save/Starting\\\";function DownloadCurrentDB(t){this.wiki=t}DownloadCurrentDB.prototype.save=function(t,i,e,n){if($tw.syncer.isDirty()){$tw.notifier.display(saveStartNotification);window.setTimeout($tw.rootWidget.dispatchEvent.bind($tw.rootWidget),1e3,{type:\\\"tm-save-wiki\\\"});return true}return false};DownloadCurrentDB.prototype.info={name:\\\"Download current db\\\",priority:100,capabilities:[\\\"save\\\"]};exports.canSave=function(t){return $TPouch.database!==undefined};exports.create=function(t){return new DownloadCurrentDB(t)};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/savers/db-saver.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"saver\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/config/single-db-config\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/config/single-db-config\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/config/single-db-config\\ntype: application/javascript\\nmodule-type: library\\n\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function _typeof(e){\\\"@babel/helpers - typeof\\\";if(typeof Symbol===\\\"function\\\"&&typeof Symbol.iterator===\\\"symbol\\\"){_typeof=function e(t){return typeof t}}else{_typeof=function e(t){return t&&typeof Symbol===\\\"function\\\"&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t}}return _typeof(e)}module.exports=dbConfig;function dbConfig(e,t){if(_typeof(e)===\\\"object\\\"){t=e.remote;e=e.name}this.name=e;this.remote={};if(_typeof(t)===\\\"object\\\"){this.remote.name=t.name;this.remote.url=t.url;this.remote.username=t.username;this.remote.password=t.password}}dbConfig.prototype.getName=function(){return this.name};dbConfig.prototype.getRemoteName=function(){var e=this.remote&&this.remote.name;return e};dbConfig.prototype.getConfig=function(){return{name:this.name,remote:this.remote}};dbConfig.prototype.getUrl=function e(t){var o=this.remote.url;if(!o){return null}o=o.substr(-1)===\\\"/\\\"?o:o+\\\"/\\\";if(t){o+=t}return o};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/single_db_config_manager.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/startup/remove-splash.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/startup/remove-splash.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/startup/remove-splash.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nThe only purpose of this startup module is removing the splash screen.\\nWe do it on a startup module that is executed as later as possible on the\\nboot process, so we remove the loading message when the wiki has loaded fully,\\nand not before.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";exports.name=\\\"TiddlyPouch-remove-splash\\\";exports.after=[\\\"startup\\\"];exports.platforms=[\\\"browser\\\"];exports.synchronous=true;exports.startup=function(){$TPouch.splashScreen.hide()};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/startup/remove-splash.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/startup/config.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/startup/config.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/startup/config.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nModule responsible of managing the config.\\nCreates and reads the config database.\\nProvides an interface to the configurations (get, set, update)\\nConfiguration should be immutable and require a reboot to become active\\nOnly remote configuration (username, remote_name, url) may be changed in the running session.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function _typeof(e){\\\"@babel/helpers - typeof\\\";if(typeof Symbol===\\\"function\\\"&&typeof Symbol.iterator===\\\"symbol\\\"){_typeof=function e(t){return typeof t}}else{_typeof=function e(t){return t&&typeof Symbol===\\\"function\\\"&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t}}return _typeof(e)}function ownKeys(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);if(e)n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable});r.push.apply(r,n)}return r}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=arguments[e]!=null?arguments[e]:{};if(e%2){ownKeys(Object(r),true).forEach(function(e){_defineProperty(t,e,r[e])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}}return t}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _objectWithoutProperties(e,t){if(e==null)return{};var r=_objectWithoutPropertiesLoose(e,t);var n,o;if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++){n=i[o];if(t.indexOf(n)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(e,n))continue;r[n]=e[n]}}return r}function _objectWithoutPropertiesLoose(e,t){if(e==null)return{};var r={};var n=Object.keys(e);var o,i;for(i=0;i<n.length;i++){o=n[i];if(t.indexOf(o)>=0)continue;r[o]=e[o]}return r}function _toPropertyKey(e){var t=_toPrimitive(e,\\\"string\\\");return _typeof(t)===\\\"symbol\\\"?t:String(t)}function _toPrimitive(e,t){if(_typeof(e)!==\\\"object\\\"||e===null)return e;var r=e[Symbol.toPrimitive];if(r!==undefined){var n=r.call(e,t||\\\"default\\\");if(_typeof(n)!==\\\"object\\\")return n;throw new TypeError(\\\"@@toPrimitive must return a primitive value.\\\")}return(t===\\\"string\\\"?String:Number)(e)}exports.name=\\\"TiddlyPouch-config\\\";exports.before=[\\\"pouchdb\\\"];exports.platforms=[\\\"browser\\\"];exports.synchronous=false;var CONFIG_PREFIX=\\\"$:/plugins/danielo515/tiddlypouch/config/\\\";var CONFIG_TIDDLER=CONFIG_PREFIX+\\\"config_database\\\";exports.startup=function(e){var t=require(\\\"$:/plugins/danielo515/tiddlypouch/utils\\\"),r=t.extendDeep,n=t.extendOne;var o=require(\\\"$:/plugins/danielo515/tiddlypouch/utils/logger.js\\\",true).Logger;var i=new o(\\\"TiddlyPouch:config\\\");var u=require(\\\"$:/plugins/danielo515/tiddlypouch/ui/config.js\\\");var c=require(\\\"$:/plugins/danielo515/tiddlypouch/config/single-db-config\\\");var a;var f;var s;var l=\\\"MyNotebook\\\";function d(){return{debug:{active:true,verbose:false},selectedDbId:l,databases:{}}}function g(){try{return JSON.parse($tw.wiki.getTiddler(CONFIG_TIDDLER).fields.text)}catch(e){console.log(\\\"No tiddler config, using default\\\");return d()}}function p(e){var t=e||a;var r=JSON.stringify(t);$tw.wiki.addTiddler(new $tw.Tiddler({title:CONFIG_TIDDLER,type:\\\"application/json\\\",text:r}));return true}function b(e){var t=r({},a,e);if(!t||!m(t)){i.log(\\\"Updating config to DB - ERROR\\\",\\\"Tried to persist an invalid config\\\");return}return v(t).then(function(e){a=e;p(e);return e})}function y(e){var t=a.databases,r=t[e],n=_objectWithoutProperties(t,[e].map(_toPropertyKey));var o=_objectSpread({},a,{databases:n,selectedDbId:Object.keys(n)[0]||l});return v(o).then(function(e){a=e;p(e);return e})}function v(e){var t=n({_id:\\\"configuration\\\"},e);return f.get(\\\"configuration\\\")[\\\"catch\\\"](function(e){if(e.status!==404)throw e;return d()}).then(function(e){return f.put(_objectSpread({},e,{},t))}).then(function(e){i.log(\\\"Persist config to DB - OK\\\",e);return h()})[\\\"catch\\\"](function(e){i.log(\\\"Persist config to DB - ERROR\\\",e);return t})}function h(){return f.get(\\\"configuration\\\").then(function(e){if(m(e)){return e}throw new Error(\\\"Config was read, but it was invalid\\\",JSON.stringify(e,null,2))})[\\\"catch\\\"](function(e){i.log(\\\"Config read from DB - ERROR\\\",e);throw e})}function m(e){var t=false;t=!!(e&&e.debug);t=!!(e&&e.selectedDbId);return t}function O(e){var t={name:e,remote:{name:null,username:null,url:null}};a.databases[e]=a.databases[e]||t;return a.databases[e]}function P(e){s.remote=$tw.utils.extend({},s.remote,e);return b({databases:_defineProperty({},s.getName(),{remote:e})})}function w(){var t=[];$tw.utils.each(a.databases,function(e){t.push(e.name)});return t}function _(){return a.debug.active}function D(){return a.debug.verbose}function j(){f=$TPouch._configDb;i.log(\\\"Initializing config module\\\");return h().then(function(e){i.debug(\\\"Config read from DB - OK\\\");a=e;p(e)})[\\\"catch\\\"](function(e){i.debug(\\\"FallingBack to tiddler configuration\\\");a=g();return a}).then(function(){s=new c(O(a.selectedDbId));return b()})}return j().then(function(){$TPouch.Logger=o;$TPouch.Logger.prototype.isDebugActive=a.debug.active;$TPouch.DbStore=require(\\\"$:/plugins/danielo515/tiddlypouch/dbstore/factory\\\");$TPouch.config={removeDatabase:y,getAllDBNames:w,readConfigTiddler:g,getDatabaseConfig:O,update:b,updateRemoteConfig:P,selectedDB:a.selectedDbId,_configDB:f,_getConfig:function e(){return a},debug:{isActive:_,isVerbose:D},currentDB:s};u.refreshUI(a);i.log(\\\"Configuration startup finished\\\",a);e()})};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/startup/startup-config.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/startup/event-listeners.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/startup/event-listeners.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/startup/event-listeners.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nThis module creates the basic structure needed for the plugin.\\nThis included the TiddlyPouch Object namespace and the local database\\nThe existence of the database determines if the plugin will be active or not.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";exports.name=\\\"TiddlyPouch-eventListeners\\\";exports.after=[\\\"startup\\\"];exports.platforms=[\\\"browser\\\"];exports.synchronous=true;var _require=require(\\\"$:/plugins/danielo515/tiddlypouch/constants.js\\\"),DELETE_DB=_require.DELETE_DB,LIST_REVISIONS=_require.LIST_REVISIONS,LOAD_REVISION=_require.LOAD_REVISION,CONFIG_SAVED=_require.CONFIG_SAVED,UPDATE_DEBUG=_require.UPDATE_DEBUG,UPDATE_SELECTED_DB=_require.UPDATE_SELECTED_DB,DB_HAS_BEEN_SELECTED=_require.DB_HAS_BEEN_SELECTED;exports.startup=function(){var r=new $TPouch.Logger(\\\"TiddlyPouch\\\");var e=require(\\\"$:/plugins/danielo515/tiddlypouch/ui/config.js\\\");var a=require(\\\"$:/plugins/danielo515/tiddlypouch/utils\\\");$tw.rootWidget.addEventListener(DELETE_DB,function(e){$tw.passwordPrompt.createPrompt({serviceName:$tw.language.getString(\\\"TiddlyPouch/Delete-DB\\\",{variables:{database:$TPouch.config.currentDB.name}}),noUserName:true,submitText:\\\"Confirm\\\",canCancel:true,repeatPassword:false,callback:function e(t){if(t&&t.password===\\\"delete\\\"){$TPouch.database.destroy().then(function(){r.alert(\\\"Database \\\",$TPouch.config.currentDB.name,\\\" deleted!!!\\\")})}return true}})});$tw.rootWidget.addEventListener(LIST_REVISIONS,function(r){$TPouch.database.getTiddlerRevisions(r.param).then(function(e){var t=\\\"$:/temp/revisions:\\\"+r.param;a.saveAsJsonTiddler(t,e)})});$tw.rootWidget.addEventListener(LOAD_REVISION,function(t){$TPouch.database.getTiddler(t.param,t.paramObject.revision).then(function(e){e.title=\\\"$:/temp/revision:\\\"+t.paramObject.revision.slice(0,6)+\\\":\\\"+t.param;$tw.wiki.addTiddler(e)})});$tw.rootWidget.addEventListener(CONFIG_SAVED,function(){var e=confirm(\\\"Configuration has been changed and saved. It is necessary to reload the window. Are you Ok with it?\\\");e&&location.reload()});$tw.rootWidget.addEventListener(\\\"tp-sync-state\\\",e.setSyncFlag);$tw.rootWidget.addEventListener(DB_HAS_BEEN_SELECTED,e.handlers.databaseHasBeenSelected);$tw.rootWidget.addEventListener(UPDATE_DEBUG,e.handlers.updateDebug);$tw.rootWidget.addEventListener(UPDATE_SELECTED_DB,e.handlers.updateDbConfig)};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/startup/startup-event_listeners.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/startup/pouch.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/startup/pouch.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/startup/pouch.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nThis module creates the basic structure needed for the plugin.\\nThis included the TiddlyPouch Object namespace and the local database\\nThe existence of the database determines if the plugin will be active or not.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";exports.name=\\\"pouchdb\\\";exports.before=[\\\"startup\\\"];exports.platforms=[\\\"browser\\\"];exports.synchronous=false;exports.startup=function(e){var t=new $TPouch.Logger(\\\"PouchStartup\\\");var i=require(\\\"$:/plugins/danielo515/tiddlypouch/database/router.js\\\");var a=require(\\\"$:/plugins/danielo515/tiddlypouch/database/routes\\\");$TPouch._db=$TPouch._db||new PouchDB($TPouch.config.currentDB.name);$TPouch.database=$TPouch.DbStore($TPouch.config.currentDB.name,\\\"tiddlers\\\",$TPouch._db);$TPouch.plugins=$TPouch.DbStore(\\\"__TP_plugins\\\",\\\"plugins\\\",$TPouch._db);$TPouch.router=i.createRouter($TPouch.database);$TPouch.router.addRoute(a.plugins).addDestination(\\\"__TP_plugins\\\",$TPouch.plugins);t.log(\\\"Client side dbs created\\\");if($TPouch.config.debug.isActive()){$TPouch.database._db.on(\\\"error\\\",function(e){t.log(e);debugger})}Promise.all([$TPouch.database.createIndex(\\\"skinny_tiddlers\\\",function(e){if(e.fields[\\\"plugin-type\\\"]){return}var t={};for(var i in e.fields){if([\\\"text\\\"].indexOf(i)===-1){t[i]=e.fields[i]}}t.revision=e._rev;emit(e._id,t)}),$TPouch.database.createIndex(\\\"startup_tiddlers\\\",function(e){var t=[\\\"$:/palette\\\",\\\"$:/status/UserName\\\",\\\"$:/config/SyncFilter\\\"];e.fields&&(e.fields.tags&&e.fields.tags.indexOf(\\\"$:/tags/Macro\\\")!==-1||e.fields.tags&&e.fields.tags.indexOf(\\\"$:/tags/Palette\\\")!==-1||t.indexOf(e.fields.title)!==-1||e.fields.type===\\\"application/javascript\\\"||!!e.fields[\\\"plugin-type\\\"])&&emit(e.id)})])[\\\"catch\\\"](function(e){t.log(\\\"Something went wrong during index creation\\\",e)}).then(function(){return $TPouch.database.getTiddler(\\\"$:/StoryList\\\")}).then(function(e){$tw.wiki.addTiddler(e);t.debug(\\\"StoryList was already in database \\\",e);return $TPouch.database.getTiddler(\\\"$:/DefaultTiddlers\\\")}).then(function(e){$tw.wiki.addTiddler(e);t.log(\\\"Default tiddlers loaded from database \\\",e)})[\\\"catch\\\"](function(e){t.log(\\\"Error retrieving StoryList or DefaultTiddlers\\\");t.debug(e)}).then(function(){t.log(\\\"Client side dbs initialized\\\");e()})};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/startup/startup-pouch.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/startup/pouchdb-syncer.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/startup/pouchdb-syncer.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/startup/pouchdb-syncer.js\\ntype: application/javascript\\nmodule-type: startup\\n\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function _typeof(t){\\\"@babel/helpers - typeof\\\";if(typeof Symbol===\\\"function\\\"&&typeof Symbol.iterator===\\\"symbol\\\"){_typeof=function t(e){return typeof e}}else{_typeof=function t(e){return e&&typeof Symbol===\\\"function\\\"&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e}}return _typeof(t)}exports.name=\\\"pouchdb-syncer\\\";exports.after=[\\\"pouchdb\\\"];exports.platforms=[\\\"browser\\\"];exports.synchronous=true;var SYNC_STATE=\\\"$:/state/tiddlypouch/sync/status\\\";var SYNC_ERRORS=\\\"$:/state/tiddlypouch/sync/Log\\\";var SYNC_LOG=\\\"$:/state/tiddlypouch/sync/Log\\\";exports.startup=function(){var c=new $TPouch.Logger(\\\"PouchSync\\\");function r(t,e,n){if($TPouch.config.debug.isActive()){var o=$tw.wiki.getTiddlerText(t)+\\\"\\\\n\\\";if(_typeof(e)===\\\"object\\\"){if(e.change&&e.change.docs){delete e.change.docs}var r=JSON.stringify(e,null,$tw.config.preferences.jsonSpaces)}else{var r=e}r=n?n+r:r;var i={type:\\\"text/plain\\\",text:o+r,title:t};$tw.wiki.addTiddler(new $tw.Tiddler(i))}c.log(e)}function t(n){return n.put(o()).then(e)[\\\"catch\\\"](function(t){if(t.status==409){e()}else{r(SYNC_ERRORS,t,\\\"===SYNC Error starting===\\\");return t}});function e(t){var e=$TPouch.database._db.sync(n,{live:true,retry:true,filter:\\\"filtered_replication/only_tiddlers\\\"}).on(\\\"change\\\",function(t){r(SYNC_LOG,t,\\\"===SYNC Change===\\\");if(t.direction===\\\"pull\\\"){$tw.syncer.syncFromServer()}}).on(\\\"paused\\\",function(t){$tw.wiki.setText(SYNC_STATE,\\\"text\\\",undefined,\\\"paused\\\");if(t)r(SYNC_LOG,t,\\\"===SYNC PAUSED===\\\");else r(SYNC_LOG,\\\"===SYNC PAUSED===\\\")}).on(\\\"active\\\",function(){$tw.wiki.setText(SYNC_STATE,\\\"text\\\",undefined,\\\"syncing\\\");r(SYNC_LOG,\\\"===SYNC ACTIVE===\\\");r(SYNC_LOG,\\\"replicate resumed\\\")}).on(\\\"denied\\\",function(t){r(SYNC_ERRORS,t,\\\"===SYNC Denied===\\\")}).on(\\\"complete\\\",function(t){$tw.wiki.setText(SYNC_STATE,\\\"text\\\",undefined,\\\"completed\\\");r(SYNC_LOG,t,\\\"===SYNC Completed===\\\")}).on(\\\"error\\\",function(t){$tw.wiki.setText(SYNC_STATE,\\\"text\\\",undefined,\\\"error\\\");r(SYNC_ERRORS,t,\\\"===SYNC Error===\\\")});$TPouch.database._db.put(o())[\\\"catch\\\"](function(t){if(t.status!==409){r(SYNC_ERRORS,\\\"Filtered replication may not work, we were unable to store the required doc on the local DB\\\",\\\"===SYNC Error starting===\\\")}});$TPouch.syncHandler=e}}function e(t){var e=$TPouch.config;var n=e.currentDB.getUrl();var o=e.currentDB.getRemoteName();if(!n){r(SYNC_LOG,\\\"Entering offline mode\\\");$tw.rootWidget.dispatchEvent({type:\\\"tp-sync-state\\\",param:\\\"offline\\\"});return}$tw.rootWidget.dispatchEvent({type:\\\"tp-sync-state\\\",param:\\\"online\\\"});return new PouchDB(n+o,{auth:t})}function o(){return{_id:\\\"_design/filtered_replication\\\",filters:{only_tiddlers:function(t){return t.hasOwnProperty(\\\"fields\\\")&&t.fields.title!==\\\"$:/StoryList\\\"&&t.fields.title!==\\\"$:/status/UserName\\\"}.toString()}}}$TPouch.startSync=t;$TPouch.newOnlineDB=e};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/startup/startup-syncer.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/startup/utils.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/startup/utils.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/startup/utils.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nBasic Utils object.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";exports.name=\\\"pouchdb-utils\\\";exports.after=[\\\"pouchdb\\\"];exports.before=[\\\"pouchdb-syncer\\\"];exports.platforms=[\\\"browser\\\"];exports.synchronous=true;exports.startup=function(){this.logger=new $TPouch.Logger(\\\"PouchDB\\\");var e=this;var t=$TPouch.database;$TPouch.utils=$TPouch.utils||{};$TPouch.utils.remove=function(o){t.get(o).then(function(o){return t.remove(o)}).then(function(o){e.logger.log(\\\"Document removed\\\",o)})[\\\"catch\\\"](function(o){e.logger.log(o)})};$TPouch.utils.replace=function(o){t.get(o._id).then(function(o){return t.remove(o)}).then(function(){t.put(o).then(function(o){e.logger.log(\\\"Document replaced\\\",o)})})[\\\"catch\\\"](function(o){e.logger.log(o)})}};\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/startup/startup-utils.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/Buttons/download-basic\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/Buttons/download-basic\",\n            \"text\": \"<$button class=\\\"tc-btn-big-green\\\">\\n<$action-sendmessage $message=\\\"tm-download-file\\\" $param=\\\"$:/plugins/danielo515/tiddlypouch/save/basic\\\" filename=\\\"empty.html\\\"/>\\nDownload Empty {{$:/core/images/save-button}}\\n</$button>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Database\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Database\",\n            \"caption\": \"Database\",\n            \"tags\": \"$:/tags/TiddlyPouch/ControlPanel\",\n            \"text\": \"!!! Database Name {{$:/state/TiddlyPouch/info/databaseName||$:/plugins/danielo515/tiddlypouch/Buttons/info}}\\n\\n<$reveal type=\\\"match\\\" state=\\\"$:/state/TiddlyPouch/info/databaseName\\\" text=\\\"show\\\">\\nThis is the name of your local database. Tiddlers are stored there.\\nYou can have as many databases as you want. Changing this value will make your wiki to save/load\\ntiddlers to/from that database. This requires a ''save and reload'' to take effect.\\n</$reveal>\\n\\nName: {{$:/plugins/danielo515/tiddlypouch/ui/database-name}}\\n@@color:#cc0000;\\n,,//Without this parameter the plugin remains inactive //,,\\n@@\\n\\n!!! Connection Info\\n{{$:/plugins/danielo515/tiddlypouch/ControlPanel/Database/remote-db}}\\n\\n!!!Important information\\nLocal databases are grouped by domain.\\n''If you work'' with your wiki from a file then that particular file @@color:red; will not be able to\\naccess@@ any of the databases created by any wiki accessed online.\\nIf you want to sync databases between a wiki served by http and a local wiki you have to use\\nsome couch backend or export and import the database.\\n\\n!!! Database deletion\\nThis will delete your current database.\\nNote that if you are syncing to other devices this will only affects the local database, not the remote ones.\\n@@color:#cc0000;\\nThis action can not be undone!!\\n@@\\nPlease, reload your browser immediately after applying this.\\n\\n<$button message=\\\"tm-pouch-delete-db\\\">Delete database</$button>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Debug\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Debug\",\n            \"caption\": \"Debug\",\n            \"tags\": \"$:/tags/TiddlyPouch/ControlPanel\",\n            \"text\": \"\\nActivate logging if you are experiencing problems while syncing or you are curious about it.\\n\\n\\\"\\\"\\\"\\n<$checkbox tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/Debug/Active\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> Debug mode</$checkbox>\\n<$checkbox tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/Debug/Verbose\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> Verbose mode</$checkbox>\\n\\\"\\\"\\\"\\n\\n<$button message=\\\"tm-TP-config-updateDebug\\\">Save Config</$button>\\n\\n!!! Sync Log\\n\\n<$button>\\n<$action-navigate $to=\\\"$:/state/tiddlypouch/sync/Log\\\"/>\\nOpen Log\\n</$button>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Download\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Download\",\n            \"caption\": \"Download\",\n            \"tags\": \"$:/tags/TiddlyPouch/ControlPanel\",\n            \"text\": \"Here you have different methods of download this wiki.\\n\\n!!Save empty\\nThis downloads this wiki without any tiddler created by the user. ''Useful if'':\\n\\n* You have changed any tiddlywiki setting and you want to hardcode it on the html file.\\n* You want to move this wiki to another computer/browser.\\n* You have installed a plugin and you want it to be loaded from the file rather than from the database\\n* You want to start again without any tiddler but keeping your current plugins/configurations\\n\\n{{$:/plugins/danielo515/tiddlypouch/Buttons/download-empty}}\\n\\n<!--\\n!!Pack database\\nThis option packs the database currently in use into a system tiddler and then it\\ndownloads the wiki with it. ''Useful'' if you want to use this wiki in a different computer\\nor browser.\\n-->\\n\"\n        },\n        \"/Users/danielo/mega/programacion/tiddlywiki/tiddlypouch/dist/danielo515/tiddlypouch/tiddlers/ControlPanel/ControlPanel-Server.tid.old\": {\n            \"title\": \"/Users/danielo/mega/programacion/tiddlywiki/tiddlypouch/dist/danielo515/tiddlypouch/tiddlers/ControlPanel/ControlPanel-Server.tid.old\",\n            \"text\": \"title: $:/plugins/danielo515/tiddlypouch/ControlPanel/Server\\ncaption: Server\\ntags: $:/tags/TiddlyPouch/ControlPanel\\n\\n!!! Connection Info\\nFill the below fields if you want to synchronize your local database with a remote\\ncouch-like server.\\n\\n~CouchDB URL: <$edit-text tag=\\\"input\\\" tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/URL\\\"  default=\\\"\\\"/>\\n@@color:#c0c0c0;\\n,,//EJ: ~https://someone.cloudant.com //,,\\n@@\\n\\nDatabase name: <$edit-text tag=\\\"input\\\" tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/RemoteDatabaseName\\\" default=\\\"\\\"/>\\n@@color:#c0c0c0;\\n,,//Your data will be synbced to this this database. ''Must exist on server''. //,,\\n@@\\n\\nNeeds XHR withCredentials: <$transclude tiddler=\\\"$:/plugins/wshallum/couchadaptor/config/RequiresWithCredentials\\\">no</$transclude>\\n\\n@@color: #DD0000;\\nTo make this changes take effect you have to save and reload.\\n@@\\n{{$:/plugins/danielo515/tiddlypouch/Buttons/download-empty}}\\n\\n!!! Authentication\\n\\n<$reveal state=\\\"$:/status/IsLoggedIn\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\nLog in to ~CouchDB: <$button message=\\\"tm-login\\\">Login</$button>\\n</$reveal>\\n<$reveal state=\\\"$:/status/IsLoggedIn\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n<$reveal state=\\\"$:/status/UserName\\\" type=\\\"nomatch\\\" text=\\\"\\\">\\nLogged in as {{$:/status/UserName}} <$button message=\\\"tm-logout\\\">Logout</$button>\\n</$reveal>\\n<$reveal state=\\\"$:/status/UserName\\\" type=\\\"match\\\" text=\\\"\\\">\\nLogged in with no username: ~CouchDB is probably in [[admin party mode|http://docs.couchdb.org/en/latest/intro/security.html#the-admin-party]]. <$button message=\\\"tm-logout\\\">Logout</$button>\\n</$reveal>\\n</$reveal>\\n\",\n            \"type\": \".old\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/remote-user\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/remote-user\",\n            \"text\": \"<$edit-text tag=\\\"input\\\" index=\\\"remote.username\\\" tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/selected_database\\\"  default=\\\"\\\"/>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/remote-name\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/remote-name\",\n            \"text\": \"<$edit-text tag=\\\"input\\\" index=\\\"remote.name\\\" tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/selected_database\\\" default=\\\"\\\"/>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/remote-url\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/remote-url\",\n            \"text\": \"<$edit-text tag=\\\"input\\\" index=\\\"remote.url\\\" tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/selected_database\\\"  default=\\\"\\\"/>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/save-database-config\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/save-database-config\",\n            \"text\": \"<$button message=\\\"tm-TP-config-updateSelectedDB\\\">Save Config</$button>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ControlPanel\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ControlPanel\",\n            \"caption\": \"~TiddlyPouch\",\n            \"tags\": \"$:/tags/ControlPanel\",\n            \"text\": \"<div class=\\\"tc-tiddlypouch-control-panel\\\">\\n<<tabs \\\"[all[shadows]tag[$:/tags/TiddlyPouch/ControlPanel]]\\\" \\\"$:/plugins/danielo515/tiddlypouch/ControlPanel/Database\\\" \\\"$:/state/TiddlyPouch/tabs\\\">>\\n</div>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Database/remote-db\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ControlPanel/Database/remote-db\",\n            \"caption\": \"remote-db\",\n            \"text\": \"<div class=\\\"tc-tp-remote-db\\\">\\n\\n    <p>\\n        Fill the fields below if you want to synchronize your local database with a remote\\n        couch-like server.\\n        This information will be saved as metadata of the selected local database.\\n    </p>\\n    \\n    <p>\\n        ~CouchDB URL: {{$:/plugins/danielo515/tiddlypouch/ui/remote-url}}\\n        @@color:#c0c0c0;\\n        ,,//EJ: ~https://someone.cloudant.com //,,\\n        @@\\n    </p>\\n    \\n    <p>\\n        Remote database name: {{$:/plugins/danielo515/tiddlypouch/ui/remote-name}}\\n        @@color:#c0c0c0;\\n        ,,//Local database will be synced to this database. ''Must exist on server'' if you are not an admin user. //,,\\n        @@\\n    </p>\\n    \\n    <p>\\n        Remote user-name: {{$:/plugins/danielo515/tiddlypouch/ui/remote-user}}\\n        @@color:#c0c0c0;\\n        ,,//User or api key with admin permisions on the remote db. ''This field is optional''. //,,\\n        @@\\n    </p>\\n    \\n    {{$:/plugins/danielo515/tiddlypouch/ui/save-database-config}}\\n</div>\\n\"\n        },\n        \"GettingStarted\": {\n            \"title\": \"GettingStarted\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/Basics/\\nWelcome to ~NoteSelf and the ~TiddlyWiki community\\n\\nYou can start using your notebook right NOW. Go ahead and collect ideas, make lists, take notes, start a diary...\\nYou can have as many notebooks as you want.\\nJust change the `Notebook Name` and hit the save config button. New notes will be saved to that notebook.\\n\\nIn case you want automatic synchronization fill the fields of the synchronization section below\\n\\n!! Setup this Notebook\\n\\n<div class=\\\"tc-control-panel\\\">\\n\\n|<<tiddlypouch-tab \\\"Notebook Name\\\" \\\"Database\\\" >> |{{$:/plugins/danielo515/tiddlypouch/ui/database-name}} |\\n|! Sync configuration|<|\\n|<<tiddlypouch-tab \\\"CouchDB URL\\\" \\\"Database\\\" >> |{{$:/plugins/danielo515/tiddlypouch/ui/remote-url}} |\\n|<<tiddlypouch-tab \\\"Remote database name\\\" \\\"Database\\\" >> |{{$:/plugins/danielo515/tiddlypouch/ui/remote-name}} |\\n| {{$:/plugins/danielo515/tiddlypouch/ui/save-database-config}} |<|\\n|<$link to=\\\"$:/SiteTitle\\\">Page title</$link> |<$edit-text tiddler=\\\"$:/SiteTitle\\\" default=\\\"\\\" tag=\\\"input\\\"/> |\\n|<$link to=\\\"$:/DefaultTiddlers\\\"><<lingo DefaultTiddlers/Prompt>></$link> |<<lingo DefaultTiddlers/TopHint>><br> <$edit tag=\\\"textarea\\\" tiddler=\\\"$:/DefaultTiddlers\\\"/><br>//<<lingo DefaultTiddlers/BottomHint>>// |\\n</div>\\n\\nSee the [[control panel|$:/ControlPanel]] for more options.\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/Installation\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/Installation\",\n            \"created\": \"20140901120057909\",\n            \"modified\": \"20160730120057909\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"# Open your wiki in a browser\\n# Drag this link into your wiki\\n#> [[$:/plugins/danielo515/tiddlypouch]]\\n# Save your wiki\\n\"\n        },\n        \"$:/SiteTitle\": {\n            \"title\": \"$:/SiteTitle\",\n            \"text\": \"My Notebook\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/Stylesheet/ControlPanel\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/Stylesheet/ControlPanel\",\n            \"tags\": \"$:/tags/Stylesheet\",\n            \"text\": \".tc-tiddlypouch-control-panel input {\\n    width: 100%;\\n}\\n\\n.tc-tiddlypouch-control-panel input[type=\\\"checkbox\\\"], .tc-tiddlypouch-control-panel-checkbox {\\n    width: auto;\\n}\\n\\n.tc-tiddlypouch-control-panel .tc-type-selector input, .tc-control-panel table .tc-type-selector input {\\n    width: auto;\\n}\\n\\n.tc-plugin-reload-warning svg {\\n    height: 1em;\\n}\"\n        },\n        \"$:/status/UserName\": {\n            \"title\": \"$:/status/UserName\",\n            \"comment\": \"Put your desired user name here, for signing.\",\n            \"text\": \"\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/Buttons/download-empty\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/Buttons/download-empty\",\n            \"text\": \"<$button class=\\\"tc-btn-big-green\\\">\\n<$action-sendmessage $message=\\\"tm-download-file\\\" $param=\\\"$:/plugins/danielo515/tiddlypouch/save/empty\\\" filename=\\\"empty.html\\\"/>\\nSave empty {{$:/core/images/save-button}}\\n</$button>\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/save/empty\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/save/empty\",\n            \"text\": \"\\\\define saveTiddlerFilter()\\n[is[system]] -[prefix[$:/state/]] -[[$:/boot/boot.css]] -[type[application/javascript]library[yes]] -[[$:/boot/boot.js]] -[[$:/boot/bootprefix.js]] +[sort[title]]\\n\\\\end\\n\\\\define savingEmpty()\\nyes\\n\\\\end\\n{{$:/core/templates/tiddlywiki5.html}}\\n\\n\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/Buttons/info\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/Buttons/info\",\n            \"comment\": \"this tiddler should be used as a transclude template\",\n            \"text\": \"<$reveal type=\\\"nomatch\\\" state={{!!title}} text=\\\"show\\\">\\n<$button set={{!!title}} setTo=\\\"show\\\" class=\\\"tc-btn-invisible\\\"><span style=\\\"top:-9px; position: relative\\\">{{$:/core/images/help}}</span></$button>\\n</$reveal><$reveal type=\\\"match\\\" state={{!!title}} text=\\\"show\\\">\\n<$button set={{!!title}} class=\\\"tc-btn-invisible\\\" setTo=\\\"hide\\\"><span style=\\\"top:-9px; position: relative\\\">{{$:/core/images/help}}</span></$button>\\n</$reveal>\"\n        },\n        \"$:/language/TiddlyPouch/Delete-DB\": {\n            \"title\": \"$:/language/TiddlyPouch/Delete-DB\",\n            \"text\": \"You are going to delete database named <<database>>. Please type 'delete' and click confirm.\"\n        },\n        \"$:/language/TiddlyPouch/Notifications/Save/Starting\": {\n            \"title\": \"$:/language/TiddlyPouch/Notifications/Save/Starting\",\n            \"text\": \"Exporting database, please wait...\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/language/revisions/Hint\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/language/revisions/Hint\",\n            \"text\": \"Show current tiddler revisions\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/language/revisions/Caption\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/language/revisions/Caption\",\n            \"text\": \"Show revisions\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/save/basic\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/save/basic\",\n            \"text\": \"\\\\define saveTiddlerFilter()\\n[[$:/core]] [prefix[$:/plugins/danielo515/tiddlypouch/config/]] [[$:/isEncrypted]] [[$:/plugins/danielo515/tiddlypouch]] [[$:/plugins/danielo515/pouchdb]] [[$:/themes/tiddlywiki/snowwhite]] [[$:/themes/tiddlywiki/vanilla]] -[[$:/boot/boot.css]] -[type[application/javascript]library[yes]] -[[$:/boot/boot.js]] -[[$:/boot/bootprefix.js]] +[sort[title]]\\n\\\\end\\n\\\\define savingEmpty()\\nyes\\n\\\\end\\n{{$:/core/templates/tiddlywiki5.html}}\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/buttons/login\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/buttons/login\",\n            \"text\": \"<$button message=\\\"tm-login\\\" >Offline</$button>\"\n        },\n        \"$:/state/tiddlypouch/sync/errors\": {\n            \"title\": \"$:/state/tiddlypouch/sync/errors\",\n            \"text\": \"\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/sync-flag\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/sync-flag\",\n            \"text\": \"<$reveal type=\\\"match\\\" state=\\\"$:/state/tiddlypouch/sync/status\\\" text=\\\"offline\\\">\\n{{$:/plugins/danielo515/tiddlypouch/ui/buttons/login}}\\n</$reveal>\\n\\n<$reveal type=\\\"nomatch\\\" state=\\\"$:/state/tiddlypouch/sync/status\\\" text=\\\"offline\\\">\\n<$button class=\\\"tc-btn-invisible\\\">\\n<$reveal type=\\\"match\\\" state=\\\"$:/state/tiddlypouch/sync/status\\\" text=\\\"error\\\">{{$:/plugins/danielo515/tiddlypouch/images/cloud-error}}</$reveal>\\n<$reveal type=\\\"match\\\" state=\\\"$:/state/tiddlypouch/sync/status\\\" text=\\\"paused\\\">{{$:/plugins/danielo515/tiddlypouch/images/cloud-ok}}</$reveal>\\n<$reveal type=\\\"match\\\" state=\\\"$:/state/tiddlypouch/sync/status\\\" text=\\\"syncing\\\">{{$:/plugins/danielo515/tiddlypouch/images/cloud-spinning}}</$reveal>\\n</$button>\\n</$reveal>\"\n        },\n        \"$:/state/tiddlypouch/sync/Log\": {\n            \"title\": \"$:/state/tiddlypouch/sync/Log\",\n            \"text\": \"\\n\"\n        },\n        \"$:/state/tiddlypouch/sync/status\": {\n            \"title\": \"$:/state/tiddlypouch/sync/status\",\n            \"text\": \"offline\"\n        },\n        \"$:/core/ui/PageTemplate/pluginreloadwarning\": {\n            \"title\": \"$:/core/ui/PageTemplate/pluginreloadwarning\",\n            \"tags\": \"$:/tags/PageTemplate\",\n            \"text\": \"\\\\define lingo-base() $:/language/\\n\\n<$list filter=\\\"[has[plugin-type]haschanged[]!plugin-type[import]limit[1]]\\\">\\n\\n<$reveal type=\\\"nomatch\\\" state=\\\"$:/temp/HidePluginWarning\\\" text=\\\"yes\\\">\\n\\n<div class=\\\"tc-plugin-reload-warning\\\">\\n\\n<$set name=\\\"tv-config-toolbar-class\\\" value=\\\"\\\">\\n\\nYou have just installed a plugin. Please wait until changes has been saved (<span class=\\\"tc-dirty-indicator\\\">{{$:/core/images/done-button}}</span>) and reload the window <$button set=\\\"$:/temp/HidePluginWarning\\\" setTo=\\\"yes\\\" class=\\\"tc-btn-invisible\\\">{{$:/core/images/close-button}}</$button>\\n\\n</$set>\\n\\n</div>\\n\\n</$reveal>\\n\\n</$list>\"\n        },\n        \"$:/core/ui/ViewTemplate\": {\n            \"title\": \"$:/core/ui/ViewTemplate\",\n            \"text\": \"\\\\define InfoTabState()\\n$:/state/infotab/$(currentTiddler)$\\n\\\\end\\n\\\\define frame-classes()\\ntc-tiddler-frame tc-tiddler-view-frame $(missingTiddlerClass)$ $(shadowTiddlerClass)$ $(systemTiddlerClass)$ $(tiddlerTagClasses)$\\n\\\\end\\n\\\\define folded-state()\\n$:/state/folded/$(currentTiddler)$\\n\\\\end\\n<$set name=\\\"storyTiddler\\\" value=<<currentTiddler>>><$set name=\\\"tiddlerInfoState\\\" value=<<qualify \\\"$:/state/popup/tiddler-info\\\">> ><$set name=\\\"tiddlerInfoTabState\\\" value=<<InfoTabState>> ><$tiddler tiddler=<<currentTiddler>>><div class=<<frame-classes>>><$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/ViewTemplate]!has[draft.of]]\\\" variable=\\\"listItem\\\"><$transclude tiddler=<<listItem>>/></$list>\\n</div>\\n</$tiddler></$set></$set></$set>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/revisions/Diff\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/revisions/Diff\",\n            \"created\": \"20170611144453800\",\n            \"modified\": \"20170611160403640\",\n            \"tags\": \"\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"<div class=\\\"tc-tiddler-preview\\\">\\n  <div class=\\\"tc-tiddler-preview-preview\\\">\\n  <$tiddler tiddler={{$:/state/diff/left}}>\\n  <$transclude\\n        tiddler=\\\"$:/plugins/danielo515/tiddlypouch/ui/revisions/side-view\\\"\\n        mode=\\\"inline\\\"/>\\n  </$tiddler>\\n  </div>\\n  <div class=\\\"tc-tiddler-preview-preview\\\">\\n  <$tiddler tiddler={{$:/state/diff/right}}>\\n  <$transclude\\n      tiddler=\\\"$:/plugins/danielo515/tiddlypouch/ui/revisions/side-view\\\"\\n      mode=\\\"inline\\\"/>\\n  </$tiddler>\\n  </div>\\n</div>\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/buttons/set-diff\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/buttons/set-diff\",\n            \"created\": \"20170611145021006\",\n            \"modified\": \"20170611145812396\",\n            \"tags\": \"\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"<!--This button only works when transcluded inside the revision-transclude-template\\n    It sets the currently opened revision to be compared side by side with the most recent revision of the current tiddler -->\\n<$button>\\nDiff\\n<$action-setfield $tiddler=\\\"$:/state/diff/left\\\" text=<<currentTiddler>>/>\\n<$action-setfield $tiddler=\\\"$:/state/diff/right\\\" text=<<currentTab>>/>\\n<$action-setfield $tiddler=<<tv-revisions-tab-state>> text=\\\"Diff\\\"/>\\n</$button>\\n\"\n        },\n        \"$:/core/ui/TiddlerInfo\": {\n            \"title\": \"$:/core/ui/TiddlerInfo\",\n            \"text\": \"<$macrocall $name=\\\"tabs-state\\\" tabsList=\\\"[all[shadows+tiddlers]tag[$:/tags/TiddlerInfo]!has[draft.of]]\\\" state=<<tiddlerInfoTabState>> default={{$:/config/TiddlerInfo/Default}}/>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/buttons/revisions\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/buttons/revisions\",\n            \"caption\": \"{{$:/plugins/danielo515/tiddlypouch/language/revisions/Caption}}\",\n            \"description\": \"{{$:/plugins/danielo515/tiddlypouch/language/revisions/Hint}}\",\n            \"tags\": \"$:/tags/ViewToolbar\",\n            \"text\": \"<$button popup=<<tiddlerInfoState>> tooltip={{$:/plugins/danielo515/tiddlypouch/language/revisions/Hint}} aria-label={{$:/plugins/danielo515/tiddlypouch/language/revisions/Caption}} class=<<tv-config-toolbar-class>>>\\n<$action-setfield $tiddler=<<tiddlerInfoTabState>> text=\\\"$:/plugins/danielo515/tiddlypouch/ui/revisions\\\"/>\\n<$action-sendmessage $message=\\\"tm-tp-load-revisions\\\" $param=<<currentTiddler>>/>\\n<$list filter=\\\"[<tv-config-toolbar-icons>prefix[yes]]\\\">\\n{{$:/plugins/danielo515/tiddlypouch/images/revisions}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>prefix[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/plugins/danielo515/tiddlypouch/language/revisions/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/revisions/review-tabs\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/revisions/review-tabs\",\n            \"list-after\": \"$:/core/ui/ViewTemplate/title\",\n            \"tags\": \"$:/tags/ViewTemplate\",\n            \"text\": \"<$list filter=\\\"[prefix[$:/temp/revision:]suffix<currentTiddler>!field:title<currentTiddler>limit[1]]\\\" variable=\\\"ui-null\\\">\\n<$macrocall $name=\\\"revision-tabs\\\"\\ntabsList=\\\"[prefix[$:/temp/revision:]suffix<currentTiddler>]\\\"\\ndefault=<<currentTiddler>>\\nstate=\\\"$:/state/review/tabs\\\"\\nclass=\\\"tc-review-tabs\\\"\\ntemplate=\\\"$:/plugins/danielo515/tiddlypouch/ui/revisions/transclude-template\\\" />\\n</$list>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/revisions/styles\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/revisions/styles\",\n            \"tags\": \"$:/tags/Stylesheet\",\n            \"text\": \"\\\\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock\\n\\n.tc-review-tabs {  \\n      line-height: 22px; \\n}\\n\\n/* avoid nested view template be moved */\\n.tc-review-tabs .tc-tiddler-frame {\\n    padding-top:0px;\\n    padding-bottom: 0px;\\n    margin-bottom: 0px;\\n    box-shadow: none;\\n    border: none;\\n}\\n\\n.tc-review-tabs .tc-titlebar {\\n    display: none;\\n}\\n\\n/* This block adjusts the margins inside the review tabs\\n   in the different breakpoints\\n*/\\n\\n@media (max-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {\\n    .tc-tab-set.tc-review-tabs{\\n        margin-left: -14px;\\n    }\\n}\\n\\n@media (min-width: {{$:/themes/tiddlywiki/vanilla/metrics/sidebarbreakpoint}}) {\\n\\n    .tc-tab-set.tc-review-tabs{\\n        margin-left: -43px;\\n    }\\n\\n}\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/macros/revision-tabs\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/macros/revision-tabs\",\n            \"tags\": \"$:/tags/Macro\",\n            \"text\": \"\\\\define revision-tabs(tabsList,default,state:\\\"$:/state/tab\\\",class,template)\\n<$set name=\\\"tv-revisions-tab-state\\\" value=<<qualify \\\"$state$\\\">>>\\n<div class=\\\"tc-tab-set $class$\\\">\\n<div class=\\\"tc-tab-buttons $class$\\\">\\n<$button set=<<tv-revisions-tab-state>> setTo=<<currentTiddler>> default=\\\"$default$\\\" selectedClass=\\\"tc-tab-selected\\\" tooltip={{!!tooltip}}>\\n<$action-setfield $tiddler=<<folded-state>> text=\\\"show\\\"/>\\n<$set name=\\\"tv-wikilinks\\\" value=\\\"no\\\">\\n<!-- TODO: localization -->\\nCurrent\\n</$set></$button><!--\\nThis is the side by side DIFF tab\\n--><$button set=<<tv-revisions-tab-state>> setTo=\\\"Diff\\\" default=\\\"$default$\\\" selectedClass=\\\"tc-tab-selected\\\" tooltip=\\\"Side by side diff\\\">\\n<$action-setfield $tiddler=<<folded-state>> text=\\\"hide\\\"/>\\n<$set name=\\\"tv-wikilinks\\\" value=\\\"no\\\">\\nDiff\\n</$set></$button><!--\\n  All other loaded revisions tabs\\n--><$list filter=\\\"$tabsList$ -[<currentTiddler>]\\\" variable=\\\"currentTab\\\"><$set\\n  name=\\\"save-currentTiddler\\\"\\n  value=<<currentTiddler>>><$tiddler\\n    tiddler=<<currentTab>>><$button set=<<tv-revisions-tab-state>> setTo=<<currentTab>> default=\\\"$default$\\\" selectedClass=\\\"tc-tab-selected\\\" tooltip={{!!tooltip}}>\\n<$tiddler tiddler=<<save-currentTiddler>>>\\n<$action-setfield $tiddler=<<folded-state>> text=\\\"hide\\\"/>\\n<$set name=\\\"tv-wikilinks\\\" value=\\\"no\\\">\\n<$list filter=\\\"[<currentTab>removeprefix[$:/temp/revision:]removesuffix<currentTiddler>]\\\" variable=\\\"currentTab\\\">\\n<$macrocall $name=\\\"currentTab\\\" $type=\\\"text/plain\\\" $output=\\\"text/plain\\\"/>\\n</$list>\\n</$set></$tiddler></$button></$tiddler></$set></$list>\\n</div>\\n<div class=\\\"tc-tab-divider $class$\\\"/>\\n<div class=\\\"tc-tab-content $class$\\\">\\n<$list filter=\\\"$tabsList$\\\" variable=\\\"currentTab\\\">\\n\\n<$reveal type=\\\"match\\\" state=<<tv-revisions-tab-state>> text=<<currentTab>> default=\\\"$default$\\\">\\n\\n<$transclude tiddler=\\\"$template$\\\" mode=\\\"block\\\">\\n\\n<$transclude tiddler=<<currentTab>> mode=\\\"block\\\"/>\\n\\n</$transclude>\\n\\n</$reveal>\\n\\n</$list><!--\\n  This is the body of the DIFF tab. Should be here because otherwhise it moves the other tabs buttons\\n--><$reveal type=\\\"match\\\" state=<<tv-revisions-tab-state>> text=\\\"Diff\\\" default=\\\"$default$\\\">\\n\\n<$transclude tiddler=\\\"$:/plugins/danielo515/tiddlypouch/ui/revisions/Diff\\\" mode=\\\"block\\\"/>\\n\\n</$reveal>\\n</div>\\n</div>\\n</$set>\\n\\\\end\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/revisions/transclude-template\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/revisions/transclude-template\",\n            \"text\": \"<!-- This template should be used with the tabs macro  -->\\n<$list filter=\\\"[is[current]!field:title<currentTab>]\\\">\\n  <div class=\\\"tc-tiddler-frame tc-revision-controls\\\">\\n  <$button>\\n    <$action-setfield $tiddler=<<currentTab>> title={{!!title}}/>\\n    Restore this revision\\n  </$button>\\n  <$transclude tiddler=\\\"$:/plugins/danielo515/tiddlypouch/ui/buttons/set-diff\\\"/>\\n  </div>\\n  <$tiddler tiddler=<<currentTab>>>\\n    <$transclude tiddler=\\\"$:/core/ui/ViewTemplate\\\"/>\\n  </$tiddler>\\n</$list>\\n\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/revisions\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/revisions\",\n            \"caption\": \"Revisions\",\n            \"tags\": \"$:/tags/TiddlerInfo\",\n            \"text\": \"<$button message=\\\"tm-tp-load-revisions\\\" param={{!!title}}>\\n    Reload revisions\\n</$button>\\n<table>\\n<$list filter=\\\"[{!!title}addprefix[$:/temp/revisions:]]\\\" variable=\\\"rev-store\\\">\\n    <$list filter=\\\"[<rev-store>indexes[]nsort[]]\\\" variable=\\\"index\\\">\\n        <$list filter=\\\"[<rev-store>getindex<index>]\\\" variable=\\\"revision\\\">\\n            <tr><td><$button class=\\\"tc-btn-invisible tc-tiddlylink\\\">\\n                <$action-sendmessage $message=\\\"tm-tp-load-certain-revision\\\" $param={{!!title}} revision=<<revision>>/>\\n                <$text text=<<revision>>/>\\n            </$button>\\n            </td></tr>\\n        </$list>\\n    </$list>\\n</$list>\\n</table>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/revisions/side-view\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/revisions/side-view\",\n            \"created\": \"20170611142115719\",\n            \"creator\": \"danielo515\",\n            \"modified\": \"20170611153258197\",\n            \"modifier\": \"danielo515\",\n            \"tags\": \"\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"<!-- This is just a template. It should be used to display different revisions of the same tiddler left and right -->\\n<$transclude tiddler=\\\"$:/core/ui/TiddlerFields\\\"/>\\n\\n<$list filter=\\\"[<currentTiddler>has[text]]\\\">\\n<$codeblock code={{!!text}} language={{!!type}}/>\\n</$list>\\n<$list filter=\\\"[<currentTiddler>!has[text]]\\\">\\n@@color:red;\\nThere is nothing to compare with\\n@@\\n</$list>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/macros/tabs-state\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/macros/tabs-state\",\n            \"tags\": \"$:/tags/Macro\",\n            \"text\": \"\\\\define tabs-state(tabsList,default,state:\\\"$:/state/tab\\\",class,template)\\n<div class=\\\"tc-tab-set $class$\\\">\\n<div class=\\\"tc-tab-buttons $class$\\\">\\n<$list filter=\\\"$tabsList$\\\" variable=\\\"currentTab\\\">\\n<$button set=<<tiddlerInfoTabState>> setTo=<<currentTab>> default=\\\"$default$\\\" selectedClass=\\\"tc-tab-selected\\\">\\n<$transclude tiddler=<<currentTab>> field=\\\"caption\\\">\\n<$macrocall $name=\\\"currentTab\\\" $type=\\\"text/plain\\\" $output=\\\"text/plain\\\"/>\\n</$transclude>\\n</$button>\\n</$list>\\n</div><div class=\\\"tc-tab-divider $class$\\\"/><div class=\\\"tc-tab-content $class$\\\">\\n<$list filter=\\\"$tabsList$\\\" variable=\\\"currentTab\\\">\\n\\n<$reveal type=\\\"match\\\" state=<<tiddlerInfoTabState>> text=<<currentTab>> default=\\\"$default$\\\">\\n\\n<$transclude tiddler=\\\"$template$\\\" mode=\\\"block\\\">\\n\\n<$transclude tiddler=<<currentTab>> mode=\\\"block\\\"/>\\n\\n</$transclude>\\n\\n</$reveal>\\n\\n</$list>\\n</div>\\n</div>\\n\\\\end\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/macros/navigate-to-controlPanel-tab\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/macros/navigate-to-controlPanel-tab\",\n            \"tags\": \"$:/tags/Macro\",\n            \"text\": \"\\\\define control-panel-tab(caption target)\\n<$button class=\\\"tc-btn-invisible tc-tiddlylink\\\">\\n    <$action-setfield $tiddler=\\\"$:/state/tab-1749438307\\\" text=\\\"$target$\\\" />\\n    <$action-navigate $to=\\\"$:/ControlPanel\\\" />\\n    $caption$\\n</$button>\\n\\\\end\\n\\n\\\\define tiddlypouch-tab(caption target)\\n<$button class=\\\"tc-btn-invisible tc-tiddlylink\\\">\\n    <$action-setfield $tiddler=\\\"$:/state/tab-1749438307\\\" text=\\\"$:/plugins/danielo515/tiddlypouch/ControlPanel\\\" />\\n    <$action-setfield $tiddler=\\\"$:/state/TiddlyPouch/tabs--1566775042\\\" text=\\\"$:/plugins/danielo515/tiddlypouch/ControlPanel/$target$\\\"/>\\n    <$action-navigate $to=\\\"$:/ControlPanel\\\" />\\n    <$text text=\\\"$caption$\\\"/>\\n</$button>\\n\\\\end\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/database-name\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/database-name\",\n            \"text\": \"<div class=\\\"tc-type-selector\\\">\\n<$edit-text tiddler=\\\"$:/plugins/danielo515/tiddlypouch/config/selected_database\\\" index=\\\"name\\\" tag=\\\"input\\\" default=\\\"\\\" focusPopup=<<qualify \\\"$:/state/TyddlyPouch/database-popup\\\">> class=\\\"tc-popup-handle\\\"/>\\n<$button popup=<<qualify \\\"$:/state/TyddlyPouch/database-popup\\\">> class=\\\"tc-btn-invisible tc-btn-dropdown\\\" tooltip=\\\"list existing databases\\\" aria-label=\\\"list existing databases\\\">{{$:/core/images/down-arrow}}</$button>\\n\\n\\n<div class=\\\"tc-block-dropdown-wrapper\\\">\\n<$reveal state=<<qualify \\\"$:/state/TyddlyPouch/database-popup\\\">> type=\\\"nomatch\\\" text=\\\"\\\" default=\\\"\\\">\\n<div class=\\\"tc-block-dropdown tc-edit-type-dropdown\\\">\\n<$list filter=\\\"[list[$:/plugins/danielo515/tiddlypouch/config/database_names]]\\\">\\n<div class=\\\"tc-dropdown-item\\\">\\n<$button class=\\\"tc-btn-invisible\\\" message=\\\"tm-TP-config-selectedDb\\\" param={{!!title}}>\\n<$text text={{!!title}}/>\\n</$button>\\n</div>\\n</$list>\\n</div>\\n</$reveal>\\n</div>\\n</div>\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/ui/config.js\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/ui/config.js\",\n            \"text\": \"/*\\\\\\ntype: application/javascript\\ntitle: $:/plugins/danielo515/tiddlypouch/ui/config.js\\nmodule-type: library\\n\\nLinks the user interface with the configuration methods\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function _defineProperty(e,t,i){if(t in e){Object.defineProperty(e,t,{value:i,enumerable:true,configurable:true,writable:true})}else{e[t]=i}return e}var DEBUG_CONFIG=\\\"$:/plugins/danielo515/tiddlypouch/config/Debug\\\";var DEBUG_ACTIVE=DEBUG_CONFIG+\\\"/Active\\\";var DEBUG_VERBOSE=DEBUG_CONFIG+\\\"/Verbose\\\";var SELECTED_DATABASE=\\\"$:/plugins/danielo515/tiddlypouch/config/selected_database\\\";var _require=require(\\\"$:/plugins/danielo515/tiddlypouch/constants.js\\\"),CONFIG_SAVED=_require.CONFIG_SAVED,SYNC_ICON=_require.SYNC_ICON,DATABASE_NAMES=_require.DATABASE_NAMES;var Utils=require(\\\"$:/plugins/danielo515/tiddlypouch/utils\\\");$TPouch.ui=$TPouch.ui||{};$TPouch.ui.refresh=exports.refreshUI=function e(t){updateDebugUI(t);refreshSelectedDbUi(t.databases[t.selectedDbId]);setSyncFlag();refreshDatabaseNamesUI();setLoginMessage();setSiteSubtitleToDatabaseName()};exports.handlers={};function setSyncFlag(e){var t=$tw.wiki.getTiddler(SYNC_ICON);if(e===\\\"offline\\\"||!$TPouch.config.currentDB.getUrl()){return $tw.wiki.addTiddler(new $tw.Tiddler(t,{tags:[]}))}$tw.wiki.addTiddler(new $tw.Tiddler(t,{tags:[\\\"$:/tags/PageControls\\\"]}))}exports.setSyncFlag=setSyncFlag;function setSiteSubtitleToDatabaseName(){var e=\\\"<<tiddlypouch-tab \\\"+$TPouch.config.currentDB.name+\\\" Database >>\\\";$tw.wiki.addTiddler({title:\\\"$:/SiteSubtitle\\\",text:e})}function setLoginMessage(){var e=$TPouch.config.currentDB.getUrl();var t=$TPouch.config.currentDB.getRemoteName();var i=\\\"Login to remote database <b>\\\"+t+\\\"</b> at: \\\"+e;$tw.wiki.addTiddler({title:\\\"$:/language/LoginToTiddlySpace\\\",text:i})}function refreshDatabaseNamesUI(){var e=$TPouch.config.getAllDBNames();$tw.wiki.addTiddler({title:DATABASE_NAMES,list:e,text:\\\"{{!!list}}\\\"})}exports.handlers.updateDebug=function(e){var t=$tw.wiki.getTiddlerText(DEBUG_ACTIVE)===\\\"yes\\\";var i=$tw.wiki.getTiddlerText(DEBUG_VERBOSE)===\\\"yes\\\";var a=$TPouch.config.readConfigTiddler();a.debug={active:t,verbose:i};$TPouch.config.update(a)};function updateDebugUI(e){$tw.wiki.addTiddler(new $tw.Tiddler({title:DEBUG_ACTIVE,text:Utils.boolToHuman(e.debug.active)}));$tw.wiki.addTiddler(new $tw.Tiddler({title:DEBUG_VERBOSE,text:Utils.boolToHuman(e.debug.verbose)}))}exports.handlers.updateDbConfig=function(e){var t=$tw.wiki.getTiddlerData(SELECTED_DATABASE);var i={selectedDbId:t.name,databases:_defineProperty({},t.name,Utils.plainToNestedObject(t))};$TPouch.config.update(i).then(function(){return $tw.rootWidget.dispatchEvent({type:CONFIG_SAVED,param:true})})};exports.handlers.databaseHasBeenSelected=function(e){var t=e.param;var i=$TPouch.config.getDatabaseConfig(t);refreshSelectedDbUi(i)};function refreshSelectedDbUi(e){var t=Utils.flattenObject(e);$tw.wiki.addTiddler(new $tw.Tiddler({title:SELECTED_DATABASE,type:\\\"application/json\\\",text:JSON.stringify(t)}))}\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/ui-config.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/danielo515/tiddlypouch/utils\": {\n            \"title\": \"$:/plugins/danielo515/tiddlypouch/utils\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/danielo515/tiddlypouch/utils\\ntype: application/javascript\\nmodule-type: library\\n\\nCollection of functions to help with some repetitive tasks.\\nIt is different from the utils created at startup, which are tiddlypoucyh focused\\nUtils here can be required for more granular use.\\n\\n@preserve\\n\\n\\\\*/\\n\\\"use strict\\\";function _typeof(e){\\\"@babel/helpers - typeof\\\";if(typeof Symbol===\\\"function\\\"&&typeof Symbol.iterator===\\\"symbol\\\"){_typeof=function e(t){return typeof t}}else{_typeof=function e(t){return t&&typeof Symbol===\\\"function\\\"&&t.constructor===Symbol&&t!==Symbol.prototype?\\\"symbol\\\":typeof t}}return _typeof(e)}var isObject=function e(t){return Object.prototype.toString.call(t)===\\\"[object Object]\\\"};var bothAreObjects=function e(t,n){return isObject(t)&&isObject(n)};var extendOne=function e(t,n){for(var o in n){if(!n.hasOwnProperty(o))continue;if(bothAreObjects(t[o],n[o])){e(t[o],n[o]);continue}if(isObject(n[o])){t[o]=e({},n[o]);continue}t[o]=n[o]}return t};var extendDeep=function e(t){for(var n=arguments.length,o=new Array(n>1?n-1:0),r=1;r<n;r++){o[r-1]=arguments[r]}return o.reduce(extendOne,t)};function saveAsJsonTiddler(e,t,n){var o=n?$tw.config.preferences.jsonSpaces:null;$tw.wiki.addTiddler(new $tw.Tiddler({title:e,type:\\\"application/json\\\",text:JSON.stringify(t,null,o)}))}function flattenObject(e){var t={};var n;for(var o in e){if(!e.hasOwnProperty(o)){continue}if(_typeof(e[o])===\\\"object\\\"){n=flattenObject(e[o]);for(var r in n){if(!n.hasOwnProperty(r)){continue}t[o+(!!isNaN(r)?\\\".\\\"+r:\\\"\\\")]=n[r]}}else{t[o]=e[o]}}return t}function plainToNestedObject(e){var n={};$tw.utils.each(e,function(e,t){o(n,t.split(\\\".\\\"),e)});return n;function o(e,t,n){t=t.slice();var o=t.pop();var r=t.reduce(function(e,t){e[t]=e[t]||{};return e[t]},e);r[o]=n;return e}}function boolToHuman(e){return e?\\\"yes\\\":\\\"no\\\"}var utils={boolToHuman:boolToHuman,plainToNestedObject:plainToNestedObject,flattenObject:flattenObject,saveAsJsonTiddler:saveAsJsonTiddler,extendOne:extendOne,extendDeep:extendDeep,isObject:isObject};module.exports=utils;$TPouch.utils=extendOne($TPouch.utils||{},utils);\\n//# sourceMappingURL=./maps/danielo515/tiddlypouch/utils.js.map\\n\",\n            \"type\": \"application/javascript\",\n            \"module-type\": \"library\"\n        }\n    }\n}"
  }
]